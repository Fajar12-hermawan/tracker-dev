{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Documents/project/budget-traker-course/frontend/src/utils/getTokenHeader.ts"],"sourcesContent":["export default function getTokenHeader () {\r\n    const token = typeof window !==\"undefined\" ? localStorage.getItem(\"token\") : null;\r\n    return token ? {Authorization: `Bearer ${token}`} : {};\r\n}"],"names":[],"mappings":";;;AAAe,SAAS;IACpB,MAAM,QAAQ,uCAA+B,aAAa,OAAO,CAAC;IAClE,OAAO,QAAQ;QAAC,eAAe,CAAC,OAAO,EAAE,OAAO;IAAA,IAAI,CAAC;AACzD","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Documents/project/budget-traker-course/frontend/src/services/user.ts"],"sourcesContent":["import api from \"@/api\"\r\nimport { handleApiError } from \"@/utils/handleApiError\"\r\nimport getTokenHeader from \"@/utils/getTokenHeader\"\r\n\r\nexport const fetchUser = async() => {\r\n    try {\r\n        const res = await api.get(\"/users\", {\r\n            headers: getTokenHeader()\r\n        })\r\n        return res.data\r\n    } catch (error) {\r\n        handleApiError(error, \"user service error\")\r\n    }\r\n}\r\n\r\nexport const fetchUserById = async(id: number) => {\r\n    try {\r\n        const res = await api.get(`/users/${id}`, {\r\n            headers: getTokenHeader()\r\n        })\r\n        return res.data\r\n    } catch (error) {\r\n        handleApiError(error, \"user service error\")\r\n    }\r\n}\r\n\r\nexport const createUser = async(data: Record<string,unknown>) => {\r\n    try {\r\n        const res = await api.post(\"/users\",data, {\r\n            headers: getTokenHeader()\r\n        })\r\n        return res.data\r\n    } catch (error) {\r\n        handleApiError(error, \"user service error\")\r\n    }\r\n}\r\n\r\nexport const updateUser = async(id: number, data: Record<string,unknown>) => {\r\n    try {\r\n        const res = await api.put(`/users/${id}`,data, {\r\n            headers: getTokenHeader()\r\n        })\r\n        return res.data\r\n    } catch (error) {\r\n        handleApiError(error, \"user service error\")\r\n    }\r\n}\r\n\r\nexport const deleteUser = async( id:number) => {\r\n    try {\r\n        const res = await api.delete(`/users${id}`, {\r\n            headers: getTokenHeader()\r\n        })\r\n        return res.data\r\n    } catch (error) {\r\n        handleApiError(error, \"user service error\")\r\n    }\r\n}"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;;;;AAEO,MAAM,YAAY;IACrB,IAAI;QACA,MAAM,MAAM,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAC,UAAU;YAChC,SAAS,CAAA,GAAA,iIAAA,CAAA,UAAc,AAAD;QAC1B;QACA,OAAO,IAAI,IAAI;IACnB,EAAE,OAAO,OAAO;QACZ,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD,EAAE,OAAO;IAC1B;AACJ;AAEO,MAAM,gBAAgB,OAAM;IAC/B,IAAI;QACA,MAAM,MAAM,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,IAAI,EAAE;YACtC,SAAS,CAAA,GAAA,iIAAA,CAAA,UAAc,AAAD;QAC1B;QACA,OAAO,IAAI,IAAI;IACnB,EAAE,OAAO,OAAO;QACZ,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD,EAAE,OAAO;IAC1B;AACJ;AAEO,MAAM,aAAa,OAAM;IAC5B,IAAI;QACA,MAAM,MAAM,MAAM,sHAAA,CAAA,UAAG,CAAC,IAAI,CAAC,UAAS,MAAM;YACtC,SAAS,CAAA,GAAA,iIAAA,CAAA,UAAc,AAAD;QAC1B;QACA,OAAO,IAAI,IAAI;IACnB,EAAE,OAAO,OAAO;QACZ,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD,EAAE,OAAO;IAC1B;AACJ;AAEO,MAAM,aAAa,OAAM,IAAY;IACxC,IAAI;QACA,MAAM,MAAM,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,IAAI,EAAC,MAAM;YAC3C,SAAS,CAAA,GAAA,iIAAA,CAAA,UAAc,AAAD;QAC1B;QACA,OAAO,IAAI,IAAI;IACnB,EAAE,OAAO,OAAO;QACZ,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD,EAAE,OAAO;IAC1B;AACJ;AAEO,MAAM,aAAa,OAAO;IAC7B,IAAI;QACA,MAAM,MAAM,MAAM,sHAAA,CAAA,UAAG,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE;YACxC,SAAS,CAAA,GAAA,iIAAA,CAAA,UAAc,AAAD;QAC1B;QACA,OAAO,IAAI,IAAI;IACnB,EAAE,OAAO,OAAO;QACZ,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD,EAAE,OAAO;IAC1B;AACJ","debugId":null}}]
}